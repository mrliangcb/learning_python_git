

# 给数组a=A[] 0到n-1  ,输出数组B，元素是B1=B0*B2*一直到n-1   元素Bi 就是不乘以Bi，只乘以其他的数
# 不能使用除法

# 法一:
# 计算一个B，就遍历所有A，这样复杂度 n^2

# 法二：
# 递归，自上而下， 

# 做一个二维矩阵
# B0 1   A1 A2 A3 A4
# B1 A0  1  A2 A3 A4
# B2 A0  A1 1  A3 A4

# 这样Bi=左(c(i-1))+右(d(i+1))
# ci就是0到i-1的积，di就是i+1到n-1的积

#c D的递推：ci=c(i-1)*a(i-1)  di=d(i+1)*a(i+1)   自下向上
# 自下向上计算D 复杂度n， 计算c，复杂度n  计算B，复杂度N，   所以总共3N   相当于复杂度n


















